- unless @most_visited_coupons.empty?
	%h4.pad15
		Cupones mas vistos
	%ul#carousel.elastislide-list
		- @most_visited_coupons.each do |coupon|
			%li
				= link_to coupon.promo_image.url(:small), data: {rel: "prettyPhoto[portfolio1]"} do
					= image_tag coupon.promo_image.url(:small), alt: ""
	.clear
.page_container
	= render "brands/everywhere_logo", current_brand: current_brand, message: ""
	.inner_content
		#options
			%ul#filters.option-set{ data: {"option-key" => "filter"}}
				%li
					=link_to "All", "#filter", class: "selected", data: { option_value: "*" } 
				- @coupon_types.each do |ct|
					%li
						=link_to ct.name, "#filter", data: { option_value: ".#{ct.name}" }
			.clear
		.row
			.span2
				%h4.categories-title
					Categor√≠as 
				#accordion2.accordion.categories_in_index
					- @categories.each do |category|
						.accordion-group
							.accordion-heading
								= link_to category.name, "##{category.name}", class: "accordion-toggle", data: {toggle: "collapse", parent: "#accordion2"}
							.accordion-body.collapse{id: "#{category.name}"}
								.accordion-inner
									%ul
										- category.sub_categories.each do |sub|
											%li
												= link_to sub.name, coupons_by_sub_category_path(sub.id)
			.span10
				.projects
					- @coupons.each do |cp|
						=render "index_coupon_item", coupon: cp
				.clear
- content_for :custom_libraries do
	:javascript
		$('#carousel').elastislide();
		$('a[data-rel]').each(function() {
			$(this).attr('rel', $(this).attr('data-rel')).removeAttr('data-rel');
		});
- content_for :ready_scripts do
	:javascript
		$(function() {
			var Page = (function() {
				var $navArrows = $( '#nav-arrows' ).hide(),
				$navDots = $( '#nav-dots' ).hide(),
				$nav = $navDots.children( 'span' ),
				$shadow = $( '#shadow' ).hide(),
				slicebox = $( '#sb-slider' ).slicebox( {
					onReady : function() {
						$navArrows.show();
						$navDots.show();
						$shadow.show();
					},
					onBeforeChange : function( pos ) {
						$nav.removeClass( 'nav-dot-current' );
						$nav.eq( pos ).addClass( 'nav-dot-current' );
					}
				}),
				init = function() {
					initEvents();
				},
				initEvents = function() {
				// add navigation events
					$navArrows.children( ':first' ).on( 'click', function() {
					slicebox.next();
					return false;
					} );
					$navArrows.children( ':last' ).on( 'click', function() {
						slicebox.previous();
						return false;
					} );
					$nav.each( function( i ) {
						$( this ).on( 'click', function( event ) {
						var $dot = $( this );
						if( !slicebox.isActive() ) {
							$nav.removeClass( 'nav-dot-current' );
							$dot.addClass( 'nav-dot-current' );
							}
							slicebox.jump( i + 1 );
							return false;
						} );
					} );
				};
				return { init : init };
			})();
			Page.init();
		});